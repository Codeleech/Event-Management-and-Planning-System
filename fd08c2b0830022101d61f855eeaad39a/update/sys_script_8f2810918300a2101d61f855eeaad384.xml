<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1419495_event_attendee</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Trigger Attendee Registration Notificati</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    try {
        var restMessage = new sn_ws.RESTMessageV2('Attendee Registration', 'Send Attendee Registration Notification');
        
        // Set parameters dynamically
        restMessage.setStringParameter('sys_id', current.sys_id.toString());
        restMessage.setStringParameter('first_name', current.first_name.toString());
        restMessage.setStringParameter('last_name', current.last_name.toString());
        restMessage.setStringParameter('email', current.email.toString());
        restMessage.setStringParameter('contact_number', current.contact_number.toString());
        restMessage.setStringParameter('event_id', current.event_id.toString());

        // Execute REST message
        var response = restMessage.executeAsync();
        var httpStatus = response.getStatusCode();
        var responseBody = response.getBody();
        
        // Log response for debugging
        gs.info('Attendee Registration Notification Response: Status=' + httpStatus + ', Body=' + responseBody);

    } catch (error) {
        gs.error('Error sending attendee registration notification: ' + error.message);
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-01 19:48:44</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8f2810918300a2101d61f855eeaad384</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Trigger Attendee Registration Notificati</sys_name>
        <sys_overrides/>
        <sys_package display_value="Event Management" source="x_1419495_event">fd08c2b0830022101d61f855eeaad39a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Event Management">fd08c2b0830022101d61f855eeaad39a</sys_scope>
        <sys_update_name>sys_script_8f2810918300a2101d61f855eeaad384</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-01 20:05:13</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=8f2810918300a2101d61f855eeaad384"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>8f2810918300a2101d61f855eeaad384</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-01 19:48:44</sys_created_on>
        <sys_id>f55854518300a2101d61f855eeaad380</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-01 19:48:44</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
